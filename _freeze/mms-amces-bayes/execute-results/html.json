{
  "hash": "9073b5b9680c85700a9dbcc9b9b70867",
  "result": {
    "engine": "knitr",
    "markdown": "# MMs and AMCEs with Bayesian multinomial logistic regression\n\nblah blah\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(brms)\nlibrary(rstan)\nlibrary(tidybayes)\nlibrary(ggdist)\nlibrary(marginaleffects)\nlibrary(parameters)\nlibrary(tinytable)\nlibrary(scales)\nlibrary(ggforce)\n\nstickers <- readRDS(\"data/processed_data/study_5_sticker.rds\")\n```\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstickers_choice_alt <- stickers |>\n  mutate(choice_alt = factor(alt * choice))\n\nstickers_choice_alt |>\n  select(resp_id, question, price, packaging, flavor, choice, choice_alt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,080 × 7\n   resp_id question price packaging         flavor    choice choice_alt\n     <dbl>    <dbl> <fct> <fct>             <fct>      <dbl> <fct>     \n 1       4        1 $3    Plastic + sticker Chocolate      1 1         \n 2       4        1 $2    Plastic + paper   Nuts           0 0         \n 3       4        2 $3    Plastic + sticker Nuts           0 0         \n 4       4        2 $2    Plastic + paper   Chocolate      1 2         \n 5       4        3 $4    Plastic + paper   Chocolate      1 1         \n 6       4        3 $2    Plastic + sticker Chocolate      0 0         \n 7       4        4 $2    Plastic + sticker Chocolate      1 1         \n 8       4        4 $4    Plastic + paper   Nuts           0 0         \n 9       4        5 $4    Plastic + sticker Chocolate      1 1         \n10       4        5 $2    Plastic + paper   Nuts           0 0         \n# ℹ 7,070 more rows\n```\n\n\n:::\n:::\n\n\n::: {.column-page-inset-right}\n\n$$\n\\begin{aligned}\n&\\ \\textbf{Multinomial probability of selection of choice}_i \\textbf{ in respondent}_j \\\\\n\\text{Choice}_{i_j} \\sim&\\ \\operatorname{Categorical}(\\{\\mu_{1,i_j}, \\mu_{2,i_j}\\}) \\\\[10pt]\n&\\ \\textbf{Model for probability of each option} \\\\\n\\{\\mu_{1,i_j}, \\mu_{2,i_j}, \\mu_{3,i_j}\\} =&\\ \\beta_{0_j} + \\beta_{1_j} \\text{Price[\\$3]}_{i_j} + \\beta_{2_j} \\text{Price[\\$4]}_{i_j} + \\\\\n&\\ \\beta_{3_j} \\text{Packaging[Plastic + sticker]}_{i_j} + \\beta_{4_j} \\text{Flavor[Nuts]}_{i_j} \\\\[20pt]  \n&\\ \\textbf{Respondent-specific slopes} \\\\\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\beta_{0_j} \\\\\n      &\\beta_{1_j} \\\\\n      &\\beta_{2_j} \\\\\n      &\\beta_{3_j} \\\\\n      &\\beta_{4_j}\n    \\end{aligned}\n  \\end{array}\n\\right) \\sim&\\ \\operatorname{Multivariate}\\ \\mathcal{N} \\left[\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\gamma^{\\beta_{0}}_{0} \\\\\n      &\\gamma^{\\beta_{1}}_{0} \\\\\n      &\\gamma^{\\beta_{2}}_{0} \\\\\n      &\\gamma^{\\beta_{3}}_{0} \\\\\n      &\\gamma^{\\beta_{4}}_{0}\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{ccccc}\n     \\sigma^2_{\\beta_{0j}} & \\rho_{\\beta_{0j}\\beta_{1j}} & \\rho_{\\beta_{0j}\\beta_{2j}} & \\rho_{\\beta_{0j}\\beta_{3j}} & \\rho_{\\beta_{0j}\\beta_{4j}} \\\\ \n     \\dots & \\sigma^2_{\\beta_{1j}} & \\rho_{\\beta_{1j}\\beta_{2j}} & \\rho_{\\beta_{1j}\\beta_{3j}} & \\rho_{\\beta_{1j}\\beta_{4j}} \\\\ \n     \\dots & \\dots & \\sigma^2_{\\beta_{2j}} & \\rho_{\\beta_{2j}\\beta_{3j}} & \\rho_{\\beta_{2j}\\beta_{4j}} \\\\ \n     \\dots & \\dots & \\dots & \\sigma^2_{\\beta_{3j}} & \\rho_{\\beta_{3j}\\beta_{4j}} \\\\ \n     \\dots & \\dots & \\dots & \\dots & \\sigma^2_{\\beta_{4j}}\n  \\end{array}\n\\right)\n\\right] \\\\[10pt]\n&\\ \\textbf{Priors} \\\\\n\\beta_{0 \\dots 4} \\sim&\\ \\mathcal{N} (0, 3) \\qquad\\qquad\\ [\\text{Prior for choice-level coefficients}] \\\\\n\\gamma^{\\beta_{0 \\dots 4}}_0 \\sim&\\ \\mathcal{N} (0, 3) \\qquad\\qquad\\ [\\text{Prior for individual-level coefficients}] \\\\\n\\sigma_{\\beta_{0 \\dots 4}} \\sim&\\ \\operatorname{Exponential}(1) \\qquad [\\text{Prior for between-respondent intercept and slope variability}] \\\\\n\\rho \\sim&\\ \\operatorname{LKJ}(1) \\qquad\\qquad [\\text{Prior for correlation between random slopes and intercepts}]\n\\end{aligned}\n$$\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_stickers_categorical_brms <- brm(\n  bf(choice_alt ~ 0 + price + packaging + flavor + (1 | ID | resp_id)),\n  data = stickers_choice_alt,\n  family = categorical(refcat = \"0\"),\n  prior = c(\n    prior(normal(0, 3), class = b, dpar = mu1),\n    prior(normal(0, 3), class = b, dpar = mu2),\n    prior(exponential(1), class = sd, dpar = mu1),\n    prior(exponential(1), class = sd, dpar = mu2)\n  ),\n  chains = 4, cores = 4, iter = 2000, seed = 1234,\n  backend = \"cmdstanr\", threads = threading(2),\n  file = \"models/model_stickers_categorical_brms\"\n)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_parameters(model_stickers_categorical_brms)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nParameter                    | Median |         95% CI |     pd |  Rhat |     ESS\n---------------------------------------------------------------------------------\nmu1_price$2                  |   0.75 | [ 0.60,  0.89] |   100% | 1.000 | 2211.00\nmu1_price$3                  |   0.02 | [-0.12,  0.15] | 58.53% | 1.000 | 2456.00\nmu1_price$4                  |  -0.86 | [-1.00, -0.73] |   100% | 1.001 | 2896.00\nmu1_packagingPlasticPsticker |   0.64 | [ 0.52,  0.77] |   100% | 1.001 | 2852.00\nmu1_flavorNuts               |  -1.93 | [-2.07, -1.80] |   100% | 1.000 | 2789.00\nmu2_price$2                  |   0.80 | [ 0.66,  0.94] |   100% | 1.000 | 2767.00\nmu2_price$3                  |   0.04 | [-0.10,  0.18] | 71.67% | 0.999 | 3099.00\nmu2_price$4                  |  -0.90 | [-1.04, -0.76] |   100% | 1.000 | 3147.00\nmu2_packagingPlasticPsticker |   0.57 | [ 0.45,  0.69] |   100% | 1.000 | 3132.00\nmu2_flavorNuts               |  -1.96 | [-2.09, -1.82] |   100% | 0.999 | 2917.00\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nUncertainty intervals (equal-tailed) computed using a MCMC distribution approximation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nThe model has a log- or logit-link. Consider using `exponentiate = TRUE` to interpret coefficients as ratios.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstickers_cat_marginalized <- model_stickers_categorical_brms |>\n  gather_draws(`^b_.*$`, regex = TRUE) |>\n  # Each variable name has \"mu1\", \"mu2\", etc. built in, like \"b_mu1_seat6\". This\n  # splits the .variable column into two parts based on a regular expression,\n  # creating one column for the mu part (\"b_mu1_\") and one for the rest of the\n  # variable name (\"seat6\")\n  separate_wider_regex(\n    .variable,\n    patterns = c(mu = \"b_mu\\\\d_\", .variable = \".*\")\n  ) |>\n  # Find the average of the three mu estimates for each variable within each\n  # draw, or marginalize across the three options, since they're randomized\n  group_by(.variable, .draw) |>\n  summarize(.value = mean(.value)) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by '.variable'. You can override using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nstickers_cat_marginalized |>\n  group_by(.variable) |>\n  median_qi()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  .variable                 .value  .lower .upper .width .point .interval\n  <chr>                      <dbl>   <dbl>  <dbl>  <dbl> <chr>  <chr>    \n1 flavorNuts               -1.94   -2.06   -1.83    0.95 median qi       \n2 packagingPlasticPsticker  0.606   0.500   0.712   0.95 median qi       \n3 price$2                   0.773   0.642   0.904   0.95 median qi       \n4 price$3                   0.0273 -0.0893  0.144   0.95 median qi       \n5 price$4                  -0.880  -0.995  -0.764   0.95 median qi       \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewdata_all_combos <- stickers |> \n  tidyr::expand(price, packaging, flavor) |> \n  mutate(resp_id = 4)\n\nall_preds_brms <- model_stickers_categorical_brms |> \n  epred_draws(newdata = newdata_all_combos) |> \n  filter(.category == 0) |> \n  mutate(.epred = 1 - .epred)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_preds_brms |> \n  group_by(price, packaging, flavor) |> \n  median_qi(.epred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 9\n   price packaging         flavor    .epred .lower .upper .width .point .interval\n   <fct> <fct>             <fct>      <dbl>  <dbl>  <dbl>  <dbl> <chr>  <chr>    \n 1 $2    Plastic + paper   Chocolate  0.813 0.789   0.834   0.95 median qi       \n 2 $2    Plastic + paper   Nuts       0.382 0.352   0.415   0.95 median qi       \n 3 $2    Plastic + sticker Chocolate  0.888 0.871   0.903   0.95 median qi       \n 4 $2    Plastic + sticker Nuts       0.532 0.498   0.565   0.95 median qi       \n 5 $3    Plastic + paper   Chocolate  0.673 0.643   0.703   0.95 median qi       \n 6 $3    Plastic + paper   Nuts       0.227 0.204   0.254   0.95 median qi       \n 7 $3    Plastic + sticker Chocolate  0.790 0.766   0.813   0.95 median qi       \n 8 $3    Plastic + sticker Nuts       0.351 0.318   0.383   0.95 median qi       \n 9 $4    Plastic + paper   Chocolate  0.454 0.421   0.489   0.95 median qi       \n10 $4    Plastic + paper   Nuts       0.106 0.0925  0.122   0.95 median qi       \n11 $4    Plastic + sticker Chocolate  0.604 0.570   0.638   0.95 median qi       \n12 $4    Plastic + sticker Nuts       0.179 0.158   0.202   0.95 median qi       \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreds_packaging_marginalized <- all_preds_brms |> \n  # Marginalize out the other covariates\n  group_by(packaging, .draw) |>\n  summarize(avg = mean(.epred))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'packaging'. You can override using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\npreds_packaging_marginalized |> \n  group_by(packaging) |> \n  median_qi()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n  packaging           avg .lower .upper .width .point .interval\n  <fct>             <dbl>  <dbl>  <dbl>  <dbl> <chr>  <chr>    \n1 Plastic + paper   0.443  0.423  0.463   0.95 median qi       \n2 Plastic + sticker 0.558  0.537  0.577   0.95 median qi       \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreds_packaging_marginalized |> \n  ggplot(aes(x = avg, y = packaging, fill = packaging)) +\n  stat_halfeye() +\n  geom_vline(xintercept = 0.5) +\n  scale_x_continuous(labels = label_percent()) +\n  guides(fill = \"none\")\n```\n\n::: {.cell-output-display}\n![](mms-amces-bayes_files/figure-html/unnamed-chunk-2-1.png){width=90%}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreds_packaging_marginalized |>\n  compare_levels(variable = avg, by = packaging, comparison = \"control\") |> \n  median_qi(avg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 7\n  packaging                             avg .lower .upper .width .point .interval\n  <chr>                               <dbl>  <dbl>  <dbl>  <dbl> <chr>  <chr>    \n1 Plastic + sticker - Plastic + paper 0.115 0.0949  0.135   0.95 median qi       \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreds_packaging_marginalized |>\n  compare_levels(variable = avg, by = packaging, comparison = \"control\") |> \n  ggplot(aes(x = avg, y = packaging)) +\n  stat_halfeye() +\n  geom_vline(xintercept = 0)\n```\n\n::: {.cell-output-display}\n![](mms-amces-bayes_files/figure-html/unnamed-chunk-4-1.png){width=90%}\n:::\n:::\n\n",
    "supporting": [
      "mms-amces-bayes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}