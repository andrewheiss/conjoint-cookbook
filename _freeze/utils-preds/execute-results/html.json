{
  "hash": "21f40ed018567c1429cfd6a35545b1c6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Descriptive estimands\"\nsubtitle: \"Utilities, predictions, and simulations\"\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mlogit)\nlibrary(marginaleffects)\nlibrary(parameters)\nlibrary(tinytable)\nlibrary(scales)\nlibrary(ggforce)\n\nstickers <- readRDS(\"data/processed_data/study_5_sticker.rds\")\n\nstickers_indexed <- stickers |> \n  group_by(resp_id, question) |> \n  mutate(choice_id = cur_group_id()) |> \n  ungroup() |> \n  as.data.frame() |>  # mlogit() complains and breaks when working with tibbles :(\n  dfidx(\n    idx = list(c(\"choice_id\", \"resp_id\"), \"alt\"),\n    choice = \"choice\",\n    shape = \"long\"\n  )\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_mlogit <- mlogit(\n  choice ~ 0 + price + packaging + flavor,\n  data = stickers_indexed\n)\n\npars_random <- rep(\"n\", length(model_mlogit$coefficients)) |> \n  setNames(names(model_mlogit$coef))\n\nmodel_mlogit_hierarchical <- mlogit(\n  choice ~ 0 + price + packaging + flavor,\n  rpar = pars_random, panel = TRUE, correlation = TRUE,\n  data = stickers_indexed\n)\n```\n:::\n\n\n\n## Population-level stuff\n\n### Model Î²s\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_ztv6pp10nbwzr2uxo6sp(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_ztv6pp10nbwzr2uxo6sp\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_ztv6pp10nbwzr2uxo6sp(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_ztv6pp10nbwzr2uxo6sp\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '4', j: 0 }, { i: '4', j: 1 }, { i: '4', j: 2 }, { i: '4', j: 3 }, { i: '4', j: 4 }, { i: '4', j: 5 }, { i: '4', j: 6 },  ], css_id: 'tinytable_css_7sob6xdhsqyq31y6u6ez',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 1 }, { i: '0', j: 2 }, { i: '0', j: 3 }, { i: '0', j: 4 }, { i: '0', j: 5 }, { i: '0', j: 6 },  ], css_id: 'tinytable_css_nzisngewvttos39b7dhd',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_ztv6pp10nbwzr2uxo6sp(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_7sob6xdhsqyq31y6u6ez, .table th.tinytable_css_7sob6xdhsqyq31y6u6ez { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_nzisngewvttos39b7dhd, .table th.tinytable_css_nzisngewvttos39b7dhd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_ztv6pp10nbwzr2uxo6sp\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">Parameter</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">Coefficient</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">SE</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">CI_low</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">CI_high</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">z</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"6\">p</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">price$3</td>\n                  <td data-row=\"1\" data-col=\"1\">-1.82</td>\n                  <td data-row=\"1\" data-col=\"2\">0.15</td>\n                  <td data-row=\"1\" data-col=\"3\">-2.11</td>\n                  <td data-row=\"1\" data-col=\"4\">-1.53</td>\n                  <td data-row=\"1\" data-col=\"5\">-12.33</td>\n                  <td data-row=\"1\" data-col=\"6\"><0.001</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">price$4</td>\n                  <td data-row=\"2\" data-col=\"1\">-3.98</td>\n                  <td data-row=\"2\" data-col=\"2\">0.22</td>\n                  <td data-row=\"2\" data-col=\"3\">-4.42</td>\n                  <td data-row=\"2\" data-col=\"4\">-3.54</td>\n                  <td data-row=\"2\" data-col=\"5\">-17.79</td>\n                  <td data-row=\"2\" data-col=\"6\"><0.001</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">packagingPlastic + sticker</td>\n                  <td data-row=\"3\" data-col=\"1\">1.23</td>\n                  <td data-row=\"3\" data-col=\"2\">0.12</td>\n                  <td data-row=\"3\" data-col=\"3\">0.99</td>\n                  <td data-row=\"3\" data-col=\"4\">1.47</td>\n                  <td data-row=\"3\" data-col=\"5\">10.00</td>\n                  <td data-row=\"3\" data-col=\"6\"><0.001</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">flavorNuts</td>\n                  <td data-row=\"4\" data-col=\"1\">-3.93</td>\n                  <td data-row=\"4\" data-col=\"2\">0.23</td>\n                  <td data-row=\"4\" data-col=\"3\">-4.38</td>\n                  <td data-row=\"4\" data-col=\"4\">-3.48</td>\n                  <td data-row=\"4\" data-col=\"5\">-17.06</td>\n                  <td data-row=\"4\" data-col=\"6\"><0.001</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](utils-preds_files/figure-html/unnamed-chunk-3-1.png){width=90%}\n:::\n:::\n\n\n## Individual-level stuff: Part-worth utilities and ratios\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_jak6sm7k9j6ib9r5ys38(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_jak6sm7k9j6ib9r5ys38\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_jak6sm7k9j6ib9r5ys38(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_jak6sm7k9j6ib9r5ys38\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '1', j: 7 },  ], css_id: 'tinytable_css_rp6ptbez3umk0cuivotl',}, \n          { positions: [ { i: '1', j: 6 },  ], css_id: 'tinytable_css_mz64goel4g27q6m0tli9',}, \n          { positions: [ { i: '1', j: 5 },  ], css_id: 'tinytable_css_hlw72htr78thablvr6of',}, \n          { positions: [ { i: '1', j: 4 },  ], css_id: 'tinytable_css_b5flmrrb3tayjppgt0ky',}, \n          { positions: [ { i: '1', j: 2 }, { i: '1', j: 3 },  ], css_id: 'tinytable_css_xd0udp3a5riq4hu99408',}, \n          { positions: [ { i: '5', j: 4 }, { i: '5', j: 6 }, { i: '5', j: 1 },  ], css_id: 'tinytable_css_nirl08o4eg8oboqjegp5',}, \n          { positions: [ { i: '3', j: 4 }, { i: '2', j: 4 }, { i: '3', j: 1 }, { i: '4', j: 1 }, { i: '2', j: 1 }, { i: '3', j: 6 }, { i: '4', j: 6 }, { i: '2', j: 6 }, { i: '4', j: 4 },  ], css_id: 'tinytable_css_3d1vlpztp3g1zjijmj4k',}, \n          { positions: [ { i: '1', j: 1 },  ], css_id: 'tinytable_css_5vii7tkwhfn2cglbvbgk',}, \n          { positions: [ { i: '-1', j: 2 }, { i: '-1', j: 3 }, { i: '-1', j: 1 },  ], css_id: 'tinytable_css_6xs29z34f0y386k0jkd7',}, \n          { positions: [ { i: '5', j: 3 }, { i: '5', j: 0 }, { i: '5', j: 5 }, { i: '5', j: 2 }, { i: '5', j: 7 },  ], css_id: 'tinytable_css_hi67sjyjiddqthnswyx7',}, \n          { positions: [ { i: '-1', j: 4 }, { i: '-1', j: 5 }, { i: '-1', j: 0 }, { i: '-1', j: 7 }, { i: '-1', j: 6 },  ], css_id: 'tinytable_css_ti3ejw7ig388i6yodgzj',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 3 }, { i: '0', j: 2 }, { i: '0', j: 1 }, { i: '0', j: 5 }, { i: '0', j: 4 }, { i: '0', j: 7 }, { i: '0', j: 6 },  ], css_id: 'tinytable_css_r64n7hs4brg9trirewc0',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_jak6sm7k9j6ib9r5ys38(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_rp6ptbez3umk0cuivotl, .table th.tinytable_css_rp6ptbez3umk0cuivotl { background-color: #90EE90; }\n      .table td.tinytable_css_mz64goel4g27q6m0tli9, .table th.tinytable_css_mz64goel4g27q6m0tli9 { border-left: solid black 0.1em; background-color: #90EE90; }\n      .table td.tinytable_css_hlw72htr78thablvr6of, .table th.tinytable_css_hlw72htr78thablvr6of { background-color: #ADD8E6; }\n      .table td.tinytable_css_b5flmrrb3tayjppgt0ky, .table th.tinytable_css_b5flmrrb3tayjppgt0ky { border-left: solid black 0.1em; background-color: #ADD8E6; }\n      .table td.tinytable_css_xd0udp3a5riq4hu99408, .table th.tinytable_css_xd0udp3a5riq4hu99408 { background-color: #FFFF00; }\n      .table td.tinytable_css_nirl08o4eg8oboqjegp5, .table th.tinytable_css_nirl08o4eg8oboqjegp5 { border-left: solid black 0.1em; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_3d1vlpztp3g1zjijmj4k, .table th.tinytable_css_3d1vlpztp3g1zjijmj4k { border-left: solid black 0.1em; }\n      .table td.tinytable_css_5vii7tkwhfn2cglbvbgk, .table th.tinytable_css_5vii7tkwhfn2cglbvbgk { border-left: solid black 0.1em; background-color: #FFFF00; }\n      .table td.tinytable_css_6xs29z34f0y386k0jkd7, .table th.tinytable_css_6xs29z34f0y386k0jkd7 { border-top: solid #d3d8dc 0.1em; text-align: center; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_hi67sjyjiddqthnswyx7, .table th.tinytable_css_hi67sjyjiddqthnswyx7 { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_ti3ejw7ig388i6yodgzj, .table th.tinytable_css_ti3ejw7ig388i6yodgzj { border-top: solid #d3d8dc 0.1em; text-align: center; }\n      .table td.tinytable_css_r64n7hs4brg9trirewc0, .table th.tinytable_css_r64n7hs4brg9trirewc0 { border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_jak6sm7k9j6ib9r5ys38\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n<tr>\n<th scope=\"col\" align=\"center\" colspan=1 data-row=\"-1\" data-col=\"0\"> </th>\n<th scope=\"col\" align=\"center\" colspan=3 data-row=\"-1\" data-col=\"1\">Price</th>\n<th scope=\"col\" align=\"center\" colspan=2 data-row=\"-1\" data-col=\"2\">Packaging</th>\n<th scope=\"col\" align=\"center\" colspan=2 data-row=\"-1\" data-col=\"3\">Flavor</th>\n</tr>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">ID</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">$2</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">$3</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">$4</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">Paper</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">Sticker</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"6\">Chocolate</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"7\">Nuts</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">4</td>\n                  <td data-row=\"1\" data-col=\"1\">0</td>\n                  <td data-row=\"1\" data-col=\"2\">-2.22</td>\n                  <td data-row=\"1\" data-col=\"3\">-3.98</td>\n                  <td data-row=\"1\" data-col=\"4\">0</td>\n                  <td data-row=\"1\" data-col=\"5\">-4.24</td>\n                  <td data-row=\"1\" data-col=\"6\">0</td>\n                  <td data-row=\"1\" data-col=\"7\">-9.76</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">5</td>\n                  <td data-row=\"2\" data-col=\"1\">0</td>\n                  <td data-row=\"2\" data-col=\"2\">-2.55</td>\n                  <td data-row=\"2\" data-col=\"3\">-5.99</td>\n                  <td data-row=\"2\" data-col=\"4\">0</td>\n                  <td data-row=\"2\" data-col=\"5\">-0.19</td>\n                  <td data-row=\"2\" data-col=\"6\">0</td>\n                  <td data-row=\"2\" data-col=\"7\">-0.14</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">6</td>\n                  <td data-row=\"3\" data-col=\"1\">0</td>\n                  <td data-row=\"3\" data-col=\"2\">-1.31</td>\n                  <td data-row=\"3\" data-col=\"3\">-2.87</td>\n                  <td data-row=\"3\" data-col=\"4\">0</td>\n                  <td data-row=\"3\" data-col=\"5\">2.67</td>\n                  <td data-row=\"3\" data-col=\"6\">0</td>\n                  <td data-row=\"3\" data-col=\"7\">-8.60</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">7</td>\n                  <td data-row=\"4\" data-col=\"1\">0</td>\n                  <td data-row=\"4\" data-col=\"2\">-1.61</td>\n                  <td data-row=\"4\" data-col=\"3\">-3.34</td>\n                  <td data-row=\"4\" data-col=\"4\">0</td>\n                  <td data-row=\"4\" data-col=\"5\">2.63</td>\n                  <td data-row=\"4\" data-col=\"6\">0</td>\n                  <td data-row=\"4\" data-col=\"7\">-6.78</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">8</td>\n                  <td data-row=\"5\" data-col=\"1\">0</td>\n                  <td data-row=\"5\" data-col=\"2\">-1.57</td>\n                  <td data-row=\"5\" data-col=\"3\">-3.71</td>\n                  <td data-row=\"5\" data-col=\"4\">0</td>\n                  <td data-row=\"5\" data-col=\"5\">3.49</td>\n                  <td data-row=\"5\" data-col=\"6\">0</td>\n                  <td data-row=\"5\" data-col=\"7\">-4.41</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\nFor respondent 4, the difference in preference when moving from \\$2 to \\$4 is roughly the same as the preference for a sticker\n\nWe can also calculate the relative importance of each attribute for each individual by determining how much each attribute contributes to the overall utility of the choice. We first calculate the range of each\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'id'. You can override using the `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_opnhp6pmqvy2ah4c8zg0(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_opnhp6pmqvy2ah4c8zg0\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_opnhp6pmqvy2ah4c8zg0(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_opnhp6pmqvy2ah4c8zg0\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '3', j: 1 },  ], css_id: 'tinytable_css_zzq0kkyrzu9e8ajcvei3',}, \n          { positions: [ { i: '2', j: 1 },  ], css_id: 'tinytable_css_099sfzp4y69cstfqtz11',}, \n          { positions: [ { i: '1', j: 1 },  ], css_id: 'tinytable_css_o0u6jh27x3k6n0f59zab',}, \n          { positions: [ { i: '4', j: 2 }, { i: '4', j: 0 }, { i: '4', j: 1 }, { i: '4', j: 3 },  ], css_id: 'tinytable_css_5bnz00as1to9qb9s1tuq',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 3 }, { i: '0', j: 1 }, { i: '0', j: 2 },  ], css_id: 'tinytable_css_6l3r26mmofaw7w3bg6g4',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_opnhp6pmqvy2ah4c8zg0(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_zzq0kkyrzu9e8ajcvei3, .table th.tinytable_css_zzq0kkyrzu9e8ajcvei3 { background-color: #90EE90; }\n      .table td.tinytable_css_099sfzp4y69cstfqtz11, .table th.tinytable_css_099sfzp4y69cstfqtz11 { background-color: #ADD8E6; }\n      .table td.tinytable_css_o0u6jh27x3k6n0f59zab, .table th.tinytable_css_o0u6jh27x3k6n0f59zab { background-color: #FFFF00; }\n      .table td.tinytable_css_5bnz00as1to9qb9s1tuq, .table th.tinytable_css_5bnz00as1to9qb9s1tuq { border-top: solid black 0.1em; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_6l3r26mmofaw7w3bg6g4, .table th.tinytable_css_6l3r26mmofaw7w3bg6g4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_opnhp6pmqvy2ah4c8zg0\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">Feature</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">max(Î²<sub>i</sub>) â min(Î²<sub>i</sub>)</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">Range</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">Importance</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">Price</td>\n                  <td data-row=\"1\" data-col=\"1\">0 â -3.98</td>\n                  <td data-row=\"1\" data-col=\"2\">3.98</td>\n                  <td data-row=\"1\" data-col=\"3\">22.1%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">Packaging</td>\n                  <td data-row=\"2\" data-col=\"1\">0 â -4.24</td>\n                  <td data-row=\"2\" data-col=\"2\">4.24</td>\n                  <td data-row=\"2\" data-col=\"3\">23.6%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">Flavor</td>\n                  <td data-row=\"3\" data-col=\"1\">0 â -9.76</td>\n                  <td data-row=\"3\" data-col=\"2\">9.76</td>\n                  <td data-row=\"3\" data-col=\"3\">54.3%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">Total</td>\n                  <td data-row=\"4\" data-col=\"1\"></td>\n                  <td data-row=\"4\" data-col=\"2\">17.99</td>\n                  <td data-row=\"4\" data-col=\"3\">100.0%</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_mfd1op156ivhagb4297k(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_mfd1op156ivhagb4297k\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_mfd1op156ivhagb4297k(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_mfd1op156ivhagb4297k\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '5', j: 1 }, { i: '5', j: 4 },  ], css_id: 'tinytable_css_w4jxkobo5llmgcii6k0u',}, \n          { positions: [ { i: '1', j: 1 }, { i: '2', j: 1 }, { i: '4', j: 4 }, { i: '1', j: 4 }, { i: '3', j: 1 }, { i: '4', j: 1 }, { i: '2', j: 4 }, { i: '3', j: 4 },  ], css_id: 'tinytable_css_w9n6z2z824s1pijrqjqv',}, \n          { positions: [ { i: '-1', j: 2 }, { i: '-1', j: 1 },  ], css_id: 'tinytable_css_ksam31x9e3u3nnm082xy',}, \n          { positions: [ { i: '5', j: 2 }, { i: '5', j: 5 }, { i: '5', j: 0 }, { i: '5', j: 3 }, { i: '5', j: 6 },  ], css_id: 'tinytable_css_cu26g9pye62l9vczwuda',}, \n          { positions: [ { i: '-1', j: 0 }, { i: '-1', j: 5 }, { i: '-1', j: 4 }, { i: '-1', j: 3 }, { i: '-1', j: 6 },  ], css_id: 'tinytable_css_p7yqrqljtcrjvfq5umlc',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 3 }, { i: '0', j: 2 }, { i: '0', j: 1 }, { i: '0', j: 4 }, { i: '0', j: 6 }, { i: '0', j: 5 },  ], css_id: 'tinytable_css_lvfqbrx5o7tv3v0ni06a',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_mfd1op156ivhagb4297k(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_w4jxkobo5llmgcii6k0u, .table th.tinytable_css_w4jxkobo5llmgcii6k0u { border-left: solid black 0.1em; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_w9n6z2z824s1pijrqjqv, .table th.tinytable_css_w9n6z2z824s1pijrqjqv { border-left: solid black 0.1em; }\n      .table td.tinytable_css_ksam31x9e3u3nnm082xy, .table th.tinytable_css_ksam31x9e3u3nnm082xy { border-top: solid #d3d8dc 0.1em; text-align: center; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_cu26g9pye62l9vczwuda, .table th.tinytable_css_cu26g9pye62l9vczwuda { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_p7yqrqljtcrjvfq5umlc, .table th.tinytable_css_p7yqrqljtcrjvfq5umlc { border-top: solid #d3d8dc 0.1em; text-align: center; }\n      .table td.tinytable_css_lvfqbrx5o7tv3v0ni06a, .table th.tinytable_css_lvfqbrx5o7tv3v0ni06a { border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_mfd1op156ivhagb4297k\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n<tr>\n<th scope=\"col\" align=\"center\" colspan=1 data-row=\"-1\" data-col=\"0\"> </th>\n<th scope=\"col\" align=\"center\" colspan=3 data-row=\"-1\" data-col=\"1\">Range</th>\n<th scope=\"col\" align=\"center\" colspan=3 data-row=\"-1\" data-col=\"2\">Importance</th>\n</tr>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">ID</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">Price</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">Packaging</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">Flavor</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">Price </th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"5\">Packaging </th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"6\">Flavor </th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">4</td>\n                  <td data-row=\"1\" data-col=\"1\">3.98</td>\n                  <td data-row=\"1\" data-col=\"2\">4.24</td>\n                  <td data-row=\"1\" data-col=\"3\">9.76</td>\n                  <td data-row=\"1\" data-col=\"4\">22.1%</td>\n                  <td data-row=\"1\" data-col=\"5\">23.6%</td>\n                  <td data-row=\"1\" data-col=\"6\">54.3%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">5</td>\n                  <td data-row=\"2\" data-col=\"1\">5.99</td>\n                  <td data-row=\"2\" data-col=\"2\">0.19</td>\n                  <td data-row=\"2\" data-col=\"3\">0.14</td>\n                  <td data-row=\"2\" data-col=\"4\">94.7%</td>\n                  <td data-row=\"2\" data-col=\"5\">3.1%</td>\n                  <td data-row=\"2\" data-col=\"6\">2.2%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">6</td>\n                  <td data-row=\"3\" data-col=\"1\">2.87</td>\n                  <td data-row=\"3\" data-col=\"2\">2.67</td>\n                  <td data-row=\"3\" data-col=\"3\">8.60</td>\n                  <td data-row=\"3\" data-col=\"4\">20.3%</td>\n                  <td data-row=\"3\" data-col=\"5\">18.9%</td>\n                  <td data-row=\"3\" data-col=\"6\">60.8%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">7</td>\n                  <td data-row=\"4\" data-col=\"1\">3.34</td>\n                  <td data-row=\"4\" data-col=\"2\">2.63</td>\n                  <td data-row=\"4\" data-col=\"3\">6.78</td>\n                  <td data-row=\"4\" data-col=\"4\">26.2%</td>\n                  <td data-row=\"4\" data-col=\"5\">20.6%</td>\n                  <td data-row=\"4\" data-col=\"6\">53.2%</td>\n                </tr>\n                <tr>\n                  <td data-row=\"5\" data-col=\"0\">8</td>\n                  <td data-row=\"5\" data-col=\"1\">3.71</td>\n                  <td data-row=\"5\" data-col=\"2\">3.49</td>\n                  <td data-row=\"5\" data-col=\"3\">4.41</td>\n                  <td data-row=\"5\" data-col=\"4\">32.0%</td>\n                  <td data-row=\"5\" data-col=\"5\">30.0%</td>\n                  <td data-row=\"5\" data-col=\"6\">38.0%</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](utils-preds_files/figure-html/unnamed-chunk-7-1.png){width=90%}\n:::\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'feature'. You can override using the `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](utils-preds_files/figure-html/unnamed-chunk-8-1.png){width=90%}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.mlogit(model_mlogit_hierarchical) |> \n  as_tibble(rownames = \"coefficient\") |> \n  tt() |> \n  format_tt(j = 2:5, fn = scales::label_number(accuracy = 0.001))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_76dptxnwv6y9ltds0var(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_76dptxnwv6y9ltds0var\");\n          var cell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function spanCell_76dptxnwv6y9ltds0var(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_76dptxnwv6y9ltds0var\");\n        const targetCell = table.querySelector(`[data-row=\"${i}\"][data-col=\"${j}\"]`);\n        if (!targetCell) {\n          console.warn(`Cell at (${i}, ${j}) not found.`);\n        }\n\n        // Get all cells that need to be removed\n        const cellsToRemove = [];\n        for (let r = 0; r < rowspan; r++) {\n          for (let c = 0; c < colspan; c++) {\n            if (r === 0 && c === 0) continue; // Skip the target cell\n            const cell = table.querySelector(`[data-row=\"${i + r}\"][data-col=\"${j + c}\"]`);\n            if (cell) {\n              cellsToRemove.push(cell);\n            }\n          }\n        }\n\n        // Remove all cells\n        cellsToRemove.forEach(cell => cell.remove());\n\n        // Set rowspan and colspan of the target cell if it exists\n        if (targetCell) {\n          targetCell.rowSpan = rowspan;\n          targetCell.colSpan = colspan;\n        }\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: '4', j: 0 }, { i: '4', j: 1 }, { i: '4', j: 2 }, { i: '4', j: 3 }, { i: '4', j: 4 },  ], css_id: 'tinytable_css_a66jazv6ezp1hfj6jlys',}, \n          { positions: [ { i: '0', j: 0 }, { i: '0', j: 1 }, { i: '0', j: 2 }, { i: '0', j: 3 }, { i: '0', j: 4 },  ], css_id: 'tinytable_css_pkdb48soy5viasx6p8wj',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_76dptxnwv6y9ltds0var(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_a66jazv6ezp1hfj6jlys, .table th.tinytable_css_a66jazv6ezp1hfj6jlys { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_pkdb48soy5viasx6p8wj, .table th.tinytable_css_pkdb48soy5viasx6p8wj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_76dptxnwv6y9ltds0var\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\" data-row=\"0\" data-col=\"0\">coefficient</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"1\">price$3</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"2\">price$4</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"3\">packagingPlastic + sticker</th>\n                <th scope=\"col\" data-row=\"0\" data-col=\"4\">flavorNuts</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td data-row=\"1\" data-col=\"0\">price$3</td>\n                  <td data-row=\"1\" data-col=\"1\">1.000</td>\n                  <td data-row=\"1\" data-col=\"2\">0.899</td>\n                  <td data-row=\"1\" data-col=\"3\">0.727</td>\n                  <td data-row=\"1\" data-col=\"4\">0.069</td>\n                </tr>\n                <tr>\n                  <td data-row=\"2\" data-col=\"0\">price$4</td>\n                  <td data-row=\"2\" data-col=\"1\">0.899</td>\n                  <td data-row=\"2\" data-col=\"2\">1.000</td>\n                  <td data-row=\"2\" data-col=\"3\">0.529</td>\n                  <td data-row=\"2\" data-col=\"4\">0.132</td>\n                </tr>\n                <tr>\n                  <td data-row=\"3\" data-col=\"0\">packagingPlastic + sticker</td>\n                  <td data-row=\"3\" data-col=\"1\">0.727</td>\n                  <td data-row=\"3\" data-col=\"2\">0.529</td>\n                  <td data-row=\"3\" data-col=\"3\">1.000</td>\n                  <td data-row=\"3\" data-col=\"4\">0.240</td>\n                </tr>\n                <tr>\n                  <td data-row=\"4\" data-col=\"0\">flavorNuts</td>\n                  <td data-row=\"4\" data-col=\"1\">0.069</td>\n                  <td data-row=\"4\" data-col=\"2\">0.132</td>\n                  <td data-row=\"4\" data-col=\"3\">0.240</td>\n                  <td data-row=\"4\" data-col=\"4\">1.000</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n## Predictions and transformations\n\n### Willingness-to-pay?\n\n### Simulated choice shares\n\nFunctions from @Feit:2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_mnl <- function(model, data) {\n  # Function for predicting shares from a multinomial logit model \n  # model: mlogit object returned by mlogit()\n  # data: a data frame containing the set of designs for which you want to \n  #       predict shares. Same format at the data used to estimate model. \n  data.model <- model.matrix(update(model$formula, 0 ~ .), data = data)[ , -1]\n  utility <- data.model %*% model$coef\n  share <- exp(utility) / sum(exp(utility))\n  cbind(share, data)\n}\n\npredict_hier_mnl <- function(model, data, nresp =1000) { \n  # Function to predict shares of a hierarchical multinomial logit model\n  # model: mlogit object returned by mlogit()\n  # data: a data frame containing the set of designs for which you want to\n  # predict shares. Same format at the data used to estimate model.\n  # Note that this code assumes all model parameters are random\n  data.model <- model.matrix(update(model$formula , 0 ~ .), data = data)[ , -1]\n  coef.Sigma <- cov.mlogit(model)\n  coef.mu <- model$coef[1:dim(coef.Sigma)[1]]\n  draws <- MASS::mvrnorm(n = nresp, coef.mu, coef.Sigma)\n  shares <- matrix(NA, nrow = nresp, ncol = nrow(data))\n\n  for (i in 1:nresp) {\n    utility <- data.model%*%draws[i,]\n    share <- exp(utility)/sum(exp(utility))\n    shares[i,] <- share \n  }\n\n  cbind(colMeans(shares), data)\n}\n\nexample_product_mix <- tribble(\n  ~price, ~packaging, ~flavor,\n  \"$2\", \"Plastic + sticker\", \"Chocolate\",\n  \"$3\", \"Plastic + sticker\", \"Chocolate\",\n  \"$4\", \"Plastic + sticker\", \"Chocolate\",\n  \"$2\", \"Plastic + paper\", \"Nuts\",\n  \"$3\", \"Plastic + paper\", \"Nuts\",\n  \"$4\", \"Plastic + paper\", \"Nuts\"\n) |> \n  mutate(across(everything(), factor))\n\npredict_hier_mnl(model_mlogit_hierarchical, example_product_mix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  colMeans(shares) price         packaging    flavor\n1         0.645363    $2 Plastic + sticker Chocolate\n2         0.121951    $3 Plastic + sticker Chocolate\n3         0.045006    $4 Plastic + sticker Chocolate\n4         0.157910    $2   Plastic + paper      Nuts\n5         0.021582    $3   Plastic + paper      Nuts\n6         0.008187    $4   Plastic + paper      Nuts\n```\n\n\n:::\n:::\n\n\n## Market simulations?\n",
    "supporting": [
      "utils-preds_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}